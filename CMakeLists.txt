CMAKE_MINIMUM_REQUIRED(VERSION 3.0 FATAL_ERROR)

PROJECT(DML)

# Qt5
FIND_PACKAGE(Qt5Core)
FIND_PACKAGE(Qt5Gui)
FIND_PACKAGE(Qt5Widgets)
FIND_PACKAGE(Qt5Xml)
FIND_PACKAGE(Qt5XmlPatterns)
FIND_PACKAGE(Qt5Multimedia)
INCLUDE_DIRECTORIES(
    ${Qt5Core_INCLUDE_DIRS}
    ${Qt5Gui_INCLUDE_DIRS}
    ${Qt5Widgets_INCLUDE_DIRS}
    ${Qt5Xml_INCLUDE_DIRS}
    ${Qt5XmlPatterns_INCLUDE_DIRS}
    ${Qt5Multimedia_INCLUDE_DIRS}
)
GET_TARGET_PROPERTY(QtCore_location Qt5::Core LOCATION)
GET_TARGET_PROPERTY(QtGui_location Qt5::Gui LOCATION)
GET_TARGET_PROPERTY(QtWidgets_location Qt5::Widgets LOCATION)
GET_TARGET_PROPERTY(QtXml_location Qt5::Xml LOCATION)
GET_TARGET_PROPERTY(QtXmlPatterns_location Qt5::XmlPatterns LOCATION)
GET_TARGET_PROPERTY(QtMultimedia_location Qt5::Multimedia LOCATION)
GET_TARGET_PROPERTY(QtNetwork_location Qt5::Network LOCATION)
GET_FILENAME_COMPONENT(Qt5Libs ${QtCore_location} PATH)
SET(Qt5PluginsDir "${Qt5Libs}/../plugins")

# Include and link
INCLUDE_DIRECTORIES(${DML_SOURCE_DIR}/include)
LINK_DIRECTORIES(${LIBRARY_OUTPUT_PATH})

# Subdirectories
ADD_SUBDIRECTORY(src)
ADD_SUBDIRECTORY(application)
