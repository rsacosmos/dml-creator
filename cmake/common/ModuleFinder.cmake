
MACRO(CREATE_LIBRARY_VARIABLES LIBRARY_NAMES_VAR DEBUG_POSTFIX LIBRARY_PATHS_VAR)
    SET(LIBRARY_PATHS ${${LIBRARY_PATHS_VAR}})
    SET(LIBRARY_NAMES ${${LIBRARY_NAMES_VAR}})

    FOREACH(LIBRARY_NAME ${LIBRARY_NAMES})
        STRING(TOUPPER ${LIBRARY_NAME} UPPER_LIBRARY_NAME)

        #MESSAGE(${LIBRARY_NAME})
        #MESSAGE(${LIBRARY_PATHS})
        #FOREACH(MY_PATH ${LIBRARY_PATHS})
        #    MESSAGE(${MY_PATH})
        #ENDFOREACH(MY_PATH)
        
        SET(LIBRARY_VAR         ${UPPER_LIBRARY_NAME}_LIBRARY)
        SET(LIBRARY_RELEASE_VAR ${LIBRARY_VAR}_RELEASE)
        SET(LIBRARY_DEBUG_VAR   ${LIBRARY_VAR}_DEBUG)
        
        IF(UNIX)
            STRING(REGEX REPLACE "lib" "" LIBRARY_NAME ${LIBRARY_NAME})
        ENDIF(UNIX)
        
        # find the release library path
        FIND_LIBRARY(${LIBRARY_RELEASE_VAR} 
            NAMES ${LIBRARY_NAME}
            PATHS ${LIBRARY_PATHS} ${DEFAULT_LIBRARY_PATH}
        )
        # find the debug library path
        FIND_LIBRARY(${LIBRARY_DEBUG_VAR} 
            NAMES ${LIBRARY_NAME}${DEBUG_POSTFIX}
            PATHS ${LIBRARY_PATHS} ${DEFAULT_LIBRARY_PATH}
        )
        
        IF(NOT ${LIBRARY_RELEASE_VAR} AND NOT ${LIBRARY_DEBUG_VAR})
            MESSAGE(${LIBRARY_VAR} " is not found in [" ${LIBRARY_PATHS} "] [" ${DEFAULT_LIBRARY_PATH} "].")
        ELSEIF(NOT ${LIBRARY_RELEASE_VAR})
            SET(${LIBRARY_RELEASE_VAR} ${${LIBRARY_DEBUG_VAR}})
        ELSEIF(NOT ${LIBRARY_DEBUG_VAR})
            SET(${LIBRARY_DEBUG_VAR} ${${LIBRARY_RELEASE_VAR}})
        ENDIF(NOT ${LIBRARY_RELEASE_VAR} AND NOT ${LIBRARY_DEBUG_VAR})
        
        #MESSAGE(${LIBRARY_RELEASE_VAR}=${${LIBRARY_RELEASE_VAR}})
        #MESSAGE(${LIBRARY_DEBUG_VAR}=${${LIBRARY_DEBUG_VAR}})

    ENDFOREACH(LIBRARY_NAME)
ENDMACRO(CREATE_LIBRARY_VARIABLES ARGUMENTS)
